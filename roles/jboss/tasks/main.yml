
---
# Scan linux systems for JBoss EAP or Wildfly Installations
    - name: Gather jboss-modules.jar paths
      raw: find {{scan_dirs}}  -xdev -name 'jboss-modules.jar' 2> /dev/null | sort -u;
      register: jboss.jar-path
      ignore_errors: yes
      when: '"jboss.deploy-paths" in facts_to_collect'

    - name: Gather jboss-modules.jar dates
      raw: stat {{ item }} | grep 'Change' | grep -oP '[1-2][0-9]{3}-[0-1][0-9]-[0-3][0-9]';
      with_items: "{{ jar_ver.stdout_lines|list }}"
      register: jboss.jar-date
      when: 'jboss.deploy-dates" in facts_to_collect and jar_ver.stdout|default("") != "\r\n"'
      ignore_errors: yes

    - name: Gather jboss-modules.jar versions
      raw: java -jar {{ item }} -version 2> /dev/null | grep version | sed 's/.*version\s//g';
      with_items: "{{ jar_ver.stdout_lines|list }}"
      register: jboss.jar-ver
      ignore_errors: yes
      when: 'have_java and "jboss.installed-versions" in facts_to_collect and jar_ver.stdout|default("") != "\r\n"'

    - name: Gather run.jar paths
      raw: find {{scan_dirs}}  -xdev -name 'run.jar' 2> /dev/null | sort -u;
      register: jboss.run-jar-path
      ignore_errors: yes
      when: '"jboss.deploy-paths" in facts_to_collect'

    - name: Gather run.jar dates
      raw: stat {{ item }} | grep 'Change' | grep -oP '[1-2][0-9]{3}-[0-1][0-9]-[0-3][0-9]';
      with_items: "{{ runjar_ver.stdout_lines|list }}"
      register: jboss.run-jar-date
      ignore_errors: yes
      when: '"jboss.deploy-dates" in facts_to_collect and runjar_ver.stdout|default("") != "\r\n"'

    - name: Gather run.jar versions
      raw: java -jar {{ item }} --version 2> /dev/null | grep build  | sed 's/.*[CS]V[NS]Tag.//g' | sed 's/\sdate.*//g'
      with_items: "{{ runjar_ver.stdout_lines|list }}"
      register: jboss.run-jar-ver
      when: 'have_java and "jboss.installed-versions" in facts_to_collect and runjar_ver.stdout|default("") != "\r\n"'
      ignore_errors: yes

    - name: Gather jboss.running-versions
      raw: for proc_pid in $(find /proc -maxdepth 1 -xdev -name "[0-9]*"); do ls -l ${proc_pid}/fd 2>/dev/null | grep "java"; done | grep -e "/modules/system/layers/base\|/opt/rh/eap" | sed -n "s/.*\->//p" | sed -n 's/\/modules\/system\/layers\/base.*//p;s/.*\(\/opt\/rh\/eap[1-9]\).*/\1/p' | sort -u
      register: jboss.running-versions
      ignore_errors: yes
      when: 'have_java and "jboss.running-versions" in facts_to_collect'
