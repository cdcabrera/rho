# THIS FILE IS AUTOMATICALLY GENERATED.

# Do not edit this file. Instead, edit 'doc/generate_python_docs.py'
# to make the change you want to see, and run 'make docs' to generate
# a new version of this.

'''Documentation for individual Rho facts.'''

import collections

FACT_DOCS = collections.OrderedDict([
    (u'connection.host', u'The host address of the connection'),
    (u'connection.port', u'The port used for the connection'),
    (u'connection.uuid', u'A generated identifier for the connection'),
    (u'cpu.bogomips', u'measurement of CPU speed made by the Linux kernel'),
    (u'cpu.count', u'number of processors'),
    (u'cpu.cpu_family', u'cpu family'),
    (u'cpu.model_name', u'cpu model name'),
    (u'cpu.model_ver', u'cpu model version'),
    (u'cpu.socket_count', u'number of sockets'),
    (u'cpu.vendor_id', u'cpu vendor name'),
    (u'date.anaconda_log', u'/root/anaconda-ks.cfg modified time'),
    (u'date.date', u'date'),
    (u'date.filesystem_create', u'uses tune2fs -l on the / filesystem dev found using mount'),
    (u'date.machine_id', u"/etc/machine-id modified time'"),
    (u'date.yum_history', u'dates from yum history'),
    (u'dmi.bios-vendor', u'bios vendor name'),
    (u'dmi.bios-version', u'bios version info'),
    (u'dmi.processor-family', u'processor family'),
    (u'dmi.system-manufacturer', u'system manufacturer'),
    (u'etc-issue.etc-issue', u'contents of /etc/issue (or equivalent)'),
    (u'etc_release.name', u'name of the release'),
    (u'etc_release.release', u'release information'),
    (u'etc_release.version', u'release version'),
    (u'instnum.instnum', u'installation number'),
    (u'jboss.brms.drools-core-ver', u'Drools version'),
    (u'jboss.brms.kie-api-ver', u'KIE API version'),
    (u'jboss.brms.kie-war-ver', u'KIE runtime version'),
    (u'jboss.deploy-dates', u'List of deployment dates of JBoss installations'),
    (u'jboss.fuse.activemq-ver', u'ActiveMQ version'),
    (u'jboss.fuse.camel-ver', u'Camel version'),
    (u'jboss.fuse.cxf-ver', u'CXF version'),
    (u'jboss.installed-versions', u'List of installed versions of JBoss'),
    (u'jboss.running-versions', u'List of running versions of JBoss'),
    (u'redhat-packages.is_redhat', u'determines if package is a Red Hat package'),
    (u'redhat-packages.last_installed', u'last installed package'),
    (u'redhat-packages.last_built', u'last built package'),
    (u'redhat-packages.num_rh_packages', u'number of Red Hat packages'),
    (u'redhat-packages.num_installed_packages', u'number of installed packages'),
    (u'redhat-release.name', u"name of package that provides 'redhat-release'"),
    (u'redhat-release.release', u"release of package that provides 'redhat-release'"),
    (u'redhat-release.version', u"version of package that provides 'redhat-release'"),
    (u'subman.cpu.core(s)_per_socket', u'cpu cores per socket from subscription manager'),
    (u'subman.cpu.cpu(s)', u'cpus from subscription manager'),
    (u'subman.cpu.cpu_socket(s)', u'cpu sockets from subscription manager'),
    (u'subman.has_facts_file', u'Whether subscription manager has a facts file'),
    (u'subman.virt.is_guest', u'Whether is a virtual guest from subscription manager'),
    (u'subman.virt.host_type', u'Virtual host type from subscription manager'),
    (u'subman.virt.uuid', u'Virtual host uuid from subscription manager'),
    (u'systemid.system_id', u'Red Hat Network System ID'),
    (u'systemid.username', u'Red Hat Network username'),
    (u'uname.all', u'uname -a (all)'),
    (u'uname.hardware_platform', u'uname -i (hardware_platform)'),
    (u'uname.hostname', u'uname -n (hostname)'),
    (u'uname.kernel', u'uname -r (kernel)'),
    (u'uname.os', u'uname -s (os)'),
    (u'uname.processor', u'uname -p (processor)'),
    (u'virt.num_guests', u'the number of virtualized guests'),
    (u'virt.num_running_guests', u'the number of running virtualized guests'),
    (u'virt.type', u'type of virtual system'),
    (u'virt.virt', u'host, guest, or baremetal'),
    (u'virt-what.type', u'What type of virtualization a system is running'),
])
